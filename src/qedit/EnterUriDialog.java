/*
 * EnterUriDialog.java
 *
 * Created on Jun 5, 2010, 5:55:23 AM
 */
package qedit;

import java.awt.Color;
import java.awt.Point;
import java.awt.event.ItemEvent;
import java.beans.PropertyVetoException;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.tree.DefaultMutableTreeNode;
import org.jdesktop.application.Action;

/**
 *
 * @author chung
 */
public class EnterUriDialog extends javax.swing.JDialog {

    public EnterUriDialog(java.awt.Frame parent) {
        super(parent);
        initComponents();
    }

    /** Creates new form EnterUriDialog */
    public EnterUriDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    @Action
    public void closeDialog() {
        dispose();
    }

    @Action
    public void enableDiableCredentials() {
        boolean requireCredentialsCheckBoxState = requireCredentials.isSelected();
        userNameVariable.setEnabled(requireCredentialsCheckBoxState);
        userPasswordValue.setEnabled(requireCredentialsCheckBoxState);
        provideCredentialsHint.setEnabled(requireCredentialsCheckBoxState);
    }

    @Action
    public void clearFieldsButtonAction() {
        userNameVariable.setText("");
        userPasswordValue.setText("");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        predictionGroupedButtons = new javax.swing.ButtonGroup();
        modelButtonGroup = new javax.swing.ButtonGroup();
        jPanel7 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        provideLabel = new javax.swing.JLabel();
        searchMethodSelection = new javax.swing.JComboBox();
        compoundResource = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        modelChooseFromListRadio = new javax.swing.JRadioButton();
        modelProvideUriRadio = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        DefaultMutableTreeNode rootOfTree = null;
        DefaultMutableTreeNode model = null;
        DefaultMutableTreeNode modelInfo = null;
        rootOfTree = new DefaultMutableTreeNode("QSAR Models");

        model = new DefaultMutableTreeNode("Model 1");
        modelInfo = new DefaultMutableTreeNode("URI : http://someserver.com:8081/model/1");
        model.add(modelInfo);
        modelInfo = new DefaultMutableTreeNode("Name : model 1");
        model.add(modelInfo);
        rootOfTree.add(model);

        model = new DefaultMutableTreeNode("Model 2");
        modelInfo = new DefaultMutableTreeNode("URI : http://someserver.com:8081/model/2");
        model.add(modelInfo);
        modelInfo = new DefaultMutableTreeNode("Name : model 2");
        model.add(modelInfo);
        rootOfTree.add(model);
        jTree1 = new javax.swing.JTree(rootOfTree);
        modelNotProvidedRadio = new javax.swing.JRadioButton();
        predictionPanel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        providePredictionRadio = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        predictionInDatasetRadio = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        useModelForPredictionRadio = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        credentialsPanel = new javax.swing.JPanel();
        userPasswordValue = new javax.swing.JPasswordField();
        userNameVariable = new javax.swing.JTextField();
        provideCredentialsHint = new javax.swing.JLabel();
        passwordQuality = new javax.swing.JLabel();
        requireCredentials = new javax.swing.JCheckBox();
        enterUriHint = new javax.swing.JLabel();
        infoIcon = new javax.swing.JLabel();
        loadFromRemoteButton = new javax.swing.JButton();
        clearFieldsButton = new javax.swing.JButton();
        cancellationButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(qedit.QEditApp.class).getContext().getResourceMap(EnterUriDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel7.setName("jPanel7"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel4.border.title"))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        provideLabel.setText(resourceMap.getString("provideLabel.text")); // NOI18N
        provideLabel.setName("provideLabel"); // NOI18N

        searchMethodSelection.setModel(new javax.swing.DefaultComboBoxModel(searchBy().keySet().toArray()));
        searchMethodSelection.setName("searchMethodSelection"); // NOI18N
        searchMethodSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMethodSelectionActionPerformed(evt);
            }
        });

        compoundResource.setText(resourceMap.getString("compoundResource.text")); // NOI18N
        compoundResource.setName("compoundResource"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(provideLabel)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchMethodSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compoundResource, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchMethodSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(provideLabel)
                    .addComponent(compoundResource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel5.border.title"))); // NOI18N
        jPanel5.setName("jPanel5"); // NOI18N

        modelButtonGroup.add(modelChooseFromListRadio);
        modelChooseFromListRadio.setSelected(true);
        modelChooseFromListRadio.setText(resourceMap.getString("modelChooseFromListRadio.text")); // NOI18N
        modelChooseFromListRadio.setName("modelChooseFromListRadio"); // NOI18N

        modelButtonGroup.add(modelProvideUriRadio);
        modelProvideUriRadio.setText(resourceMap.getString("modelProvideUriRadio.text")); // NOI18N
        modelProvideUriRadio.setName("modelProvideUriRadio"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, modelProvideUriRadio, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jLabel3, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jTextField2.setForeground(resourceMap.getColor("jTextField2.foreground")); // NOI18N
        jTextField2.setText(resourceMap.getString("jTextField2.text")); // NOI18N
        jTextField2.setName("jTextField2"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, modelProvideUriRadio, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jTextField2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTree1.setName("jTree1"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, modelChooseFromListRadio, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jTree1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(jTree1);

        modelButtonGroup.add(modelNotProvidedRadio);
        modelNotProvidedRadio.setText(resourceMap.getString("modelNotProvidedRadio.text")); // NOI18N
        modelNotProvidedRadio.setName("modelNotProvidedRadio"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(modelChooseFromListRadio)
                        .addComponent(modelProvideUriRadio)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1))
                    .addComponent(modelNotProvidedRadio))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(modelNotProvidedRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modelChooseFromListRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(modelProvideUriRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        predictionPanel.setName("predictionPanel"); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel6.border.title"))); // NOI18N
        jPanel6.setName("jPanel6"); // NOI18N

        predictionGroupedButtons.add(providePredictionRadio);
        providePredictionRadio.setText(resourceMap.getString("providePredictionRadio.text")); // NOI18N
        providePredictionRadio.setName("providePredictionRadio"); // NOI18N

        jTextField1.setForeground(resourceMap.getColor("jTextField1.foreground")); // NOI18N
        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, predictionInDatasetRadio, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        predictionGroupedButtons.add(predictionInDatasetRadio);
        predictionInDatasetRadio.setSelected(true);
        predictionInDatasetRadio.setText(resourceMap.getString("predictionInDatasetRadio.text")); // NOI18N
        predictionInDatasetRadio.setName("predictionInDatasetRadio"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, predictionInDatasetRadio, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jLabel2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, providePredictionRadio, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jLabel4, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jTextField3.setText(resourceMap.getString("jTextField3.text")); // NOI18N
        jTextField3.setName("jTextField3"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, providePredictionRadio, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jTextField3, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        predictionGroupedButtons.add(useModelForPredictionRadio);
        useModelForPredictionRadio.setText(resourceMap.getString("useModelForPredictionRadio.text")); // NOI18N
        useModelForPredictionRadio.setName("useModelForPredictionRadio"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(predictionInDatasetRadio)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(providePredictionRadio)
                    .addComponent(useModelForPredictionRadio))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(useModelForPredictionRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(predictionInDatasetRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(providePredictionRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout predictionPanelLayout = new javax.swing.GroupLayout(predictionPanel);
        predictionPanel.setLayout(predictionPanelLayout);
        predictionPanelLayout.setHorizontalGroup(
            predictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(predictionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        predictionPanelLayout.setVerticalGroup(
            predictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(predictionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("predictionPanel.TabConstraints.tabTitle"), predictionPanel); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        credentialsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("credentialsPanel.border.title"))); // NOI18N
        credentialsPanel.setName("credentialsPanel"); // NOI18N

        userPasswordValue.setForeground(resourceMap.getColor("userPasswordValue.foreground")); // NOI18N
        userPasswordValue.setText(resourceMap.getString("userPasswordValue.text")); // NOI18N
        userPasswordValue.setToolTipText(resourceMap.getString("userPasswordValue.toolTipText")); // NOI18N
        userPasswordValue.setName("userPasswordValue"); // NOI18N
        userPasswordValue.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                userPasswordValueCaretUpdate(evt);
            }
        });
        //// Initially disabled text field:
        userPasswordValue.setEnabled(false);

        userNameVariable.setText(resourceMap.getString("userNameVariable.text")); // NOI18N
        userNameVariable.setToolTipText(resourceMap.getString("userNameVariable.toolTipText")); // NOI18N
        userNameVariable.setName("userNameVariable"); // NOI18N
        userNameVariable.setEnabled(false);

        provideCredentialsHint.setText(resourceMap.getString("provideCredentialsHint.text")); // NOI18N
        provideCredentialsHint.setToolTipText(resourceMap.getString("provideCredentialsHint.toolTipText")); // NOI18N
        provideCredentialsHint.setName("provideCredentialsHint"); // NOI18N
        provideCredentialsHint.setEnabled(false);

        passwordQuality.setText(resourceMap.getString("passwordQuality.text")); // NOI18N
        passwordQuality.setToolTipText(resourceMap.getString("passwordQuality.toolTipText")); // NOI18N
        passwordQuality.setName("passwordQuality"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(qedit.QEditApp.class).getContext().getActionMap(EnterUriDialog.class, this);
        requireCredentials.setAction(actionMap.get("enableDiableCredentials")); // NOI18N
        requireCredentials.setText(resourceMap.getString("requireCredentials.text")); // NOI18N
        requireCredentials.setToolTipText(resourceMap.getString("requireCredentials.toolTipText")); // NOI18N
        requireCredentials.setName("requireCredentials"); // NOI18N

        enterUriHint.setText(resourceMap.getString("enterUriHint.text")); // NOI18N
        enterUriHint.setAutoscrolls(true);
        enterUriHint.setName("enterUriHint"); // NOI18N

        infoIcon.setIcon(resourceMap.getIcon("infoIcon.icon")); // NOI18N
        infoIcon.setText(resourceMap.getString("infoIcon.text")); // NOI18N
        infoIcon.setName("infoIcon"); // NOI18N

        javax.swing.GroupLayout credentialsPanelLayout = new javax.swing.GroupLayout(credentialsPanel);
        credentialsPanel.setLayout(credentialsPanelLayout);
        credentialsPanelLayout.setHorizontalGroup(
            credentialsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(credentialsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(credentialsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(requireCredentials)
                    .addGroup(credentialsPanelLayout.createSequentialGroup()
                        .addComponent(infoIcon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enterUriHint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(provideCredentialsHint, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(credentialsPanelLayout.createSequentialGroup()
                        .addComponent(userNameVariable, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(userPasswordValue, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(passwordQuality, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        credentialsPanelLayout.setVerticalGroup(
            credentialsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(credentialsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(requireCredentials)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(credentialsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordQuality, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(credentialsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(userNameVariable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(userPasswordValue)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(provideCredentialsHint, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(credentialsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoIcon)
                    .addComponent(enterUriHint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, 82))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(credentialsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(credentialsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        loadFromRemoteButton.setText(resourceMap.getString("loadFromRemoteButton.text")); // NOI18N
        loadFromRemoteButton.setToolTipText(resourceMap.getString("loadFromRemoteButton.toolTipText")); // NOI18N
        loadFromRemoteButton.setName("loadFromRemoteButton"); // NOI18N
        loadFromRemoteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFromRemoteButtonActionPerformed(evt);
            }
        });

        clearFieldsButton.setText(resourceMap.getString("clearFieldsButton.text")); // NOI18N
        clearFieldsButton.setName("clearFieldsButton"); // NOI18N
        clearFieldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFieldsButtonActionPerformed(evt);
            }
        });

        cancellationButton.setText(resourceMap.getString("cancellationButton.text")); // NOI18N
        cancellationButton.setToolTipText(resourceMap.getString("cancellationButton.toolTipText")); // NOI18N
        cancellationButton.setName("cancellationButton"); // NOI18N
        cancellationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancellationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(277, Short.MAX_VALUE)
                .addComponent(loadFromRemoteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearFieldsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancellationButton)
                .addContainerGap())
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadFromRemoteButton)
                    .addComponent(clearFieldsButton)
                    .addComponent(cancellationButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFieldsButtonActionPerformed
        clearFieldsButtonAction();
}//GEN-LAST:event_clearFieldsButtonActionPerformed

    private void cancellationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancellationButtonActionPerformed
        closeDialog();
}//GEN-LAST:event_cancellationButtonActionPerformed

    private void userPasswordValueCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_userPasswordValueCaretUpdate
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(qedit.QEditApp.class).getContext().getResourceMap(EnterUriDialog.class);
        int passLength = userPasswordValue.getPassword().length;
        if (passLength == 0) {
            passwordQuality.setText("");
        } else if (passLength >= 1 && passLength <= 4) {
            userPasswordValue.setForeground(Color.CYAN);
            passwordQuality.setText(resourceMap.getString("passwordLabel.low"));
        } else if (passLength >= 5 && passLength <= 8) {
            userPasswordValue.setForeground(Color.GREEN);
            passwordQuality.setText(resourceMap.getString("passwordLabel.medium"));
        } else if (passLength >= 9 & passLength <= 12) {
            userPasswordValue.setForeground(Color.ORANGE);
            passwordQuality.setText(resourceMap.getString("passwordLabel.good"));
        } else if (passLength >= 13) {
            userPasswordValue.setForeground(Color.RED);
            passwordQuality.setText(resourceMap.getString("passwordLabel.great"));
        }
    }//GEN-LAST:event_userPasswordValueCaretUpdate

    private void loadFromRemoteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFromRemoteButtonActionPerformed

        ReportInternalFrame nd = new ReportInternalFrame();
        nd.setVisible(true);
        QEditApp.getView().getDesktopPane().add(nd);
        nd.revalidate();
        nd.repaint();
        nd.setLocation(new Point(40 + 10 * QEditView.getNumOpenDocuments(), 40 + 10 * QEditView.getNumOpenDocuments()));
        nd.setTitle("Document " + (QEditView.getNumOpenDocuments() + 1));
        nd.setName(nd.getTitle());
        QEditView.increaseNumOpenDocuments();
        try {
            nd.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(EnterUriDialog.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            closeDialog();
        }
        QEditApp.getView().getStatusLabel().setText("Report info retrieved from remote resource");

    }//GEN-LAST:event_loadFromRemoteButtonActionPerformed

    private void searchMethodSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMethodSelectionActionPerformed
        String selected = searchMethodSelection.getSelectedItem().toString();
        provideLabel.setText(searchBy().get(selected));
        if (selected.equals("By URI")) {
            compoundResource.setText("http://");
            compoundResource.setForeground(Color.blue);
        } else {
            compoundResource.setText(null);
            compoundResource.setForeground(Color.black);
        }
    }//GEN-LAST:event_searchMethodSelectionActionPerformed

    private static Map<String, String> searchBy() {
        if (searchMap == null) {
            searchMap = new LinkedHashMap<String, String>();
            searchMap.put("By Name", "Provide Any Name :");
            searchMap.put("By InChI", "Provide InChI :");
            searchMap.put("By CAS-RN", "Provide the CAS-RN :");
            searchMap.put("By URI", "Provide the URI :");
            searchMap.put("By SMILES", "Provide the SMILES code :");
        }
        return searchMap;
    }
    private static Map<String, String> searchMap;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancellationButton;
    private javax.swing.JButton clearFieldsButton;
    private javax.swing.JTextField compoundResource;
    private javax.swing.JPanel credentialsPanel;
    private javax.swing.JLabel enterUriHint;
    private javax.swing.JLabel infoIcon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTree jTree1;
    private javax.swing.JButton loadFromRemoteButton;
    private javax.swing.ButtonGroup modelButtonGroup;
    private javax.swing.JRadioButton modelChooseFromListRadio;
    private javax.swing.JRadioButton modelNotProvidedRadio;
    private javax.swing.JRadioButton modelProvideUriRadio;
    private javax.swing.JLabel passwordQuality;
    private javax.swing.ButtonGroup predictionGroupedButtons;
    private javax.swing.JRadioButton predictionInDatasetRadio;
    private javax.swing.JPanel predictionPanel;
    private javax.swing.JLabel provideCredentialsHint;
    private javax.swing.JLabel provideLabel;
    private javax.swing.JRadioButton providePredictionRadio;
    private javax.swing.JCheckBox requireCredentials;
    private javax.swing.JComboBox searchMethodSelection;
    private javax.swing.JRadioButton useModelForPredictionRadio;
    private javax.swing.JTextField userNameVariable;
    private javax.swing.JPasswordField userPasswordValue;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
