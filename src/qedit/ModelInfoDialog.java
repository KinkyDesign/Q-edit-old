
/*
 * ModelInfoDialog.java
 *
 * Created on 1 Ιουλ 2010, 2:54:58 μμ
 */
package qedit;

import java.awt.Frame;
import javax.swing.JList;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author hampos
 */
public class ModelInfoDialog extends javax.swing.JDialog {

    /** Creates new form ModelInfoDialog */
    public ModelInfoDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public ModelInfoDialog(Frame owner) {
        super(owner);
        initComponents();
    }

    public JTextField getModelTitleTextField() {
        return modelTitleTextField;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        containerPanel = new javax.swing.JPanel();
        modelInfoPanel = new javax.swing.JPanel();
        modelUriLabel = new javax.swing.JLabel();
        modelUriField = new javax.swing.JTextField();
        trainingDatasetField = new javax.swing.JTextField();
        trainingDatasetLabel = new javax.swing.JLabel();
        predictionFeatureField = new javax.swing.JTextField();
        predictionFeatureLabel = new javax.swing.JLabel();
        dependentFeatureField = new javax.swing.JTextField();
        dependentFeatureLabel = new javax.swing.JLabel();
        trainingAlgorithmLabel = new javax.swing.JLabel();
        independentFeaturesLabel = new javax.swing.JLabel();
        trainingAlgorithmField = new javax.swing.JTextField();
        independentFeaturesScrollable = new javax.swing.JScrollPane();
        independentFeaturesList = new javax.swing.JList();
        independentFeaturesListToolbar = new javax.swing.JToolBar();
        newIndependentFeatureButton = new javax.swing.JButton();
        removeIndependentFeatureButton = new javax.swing.JButton();
        clearAllIndependentFeaturesButton = new javax.swing.JButton();
        modelTitleTextField = new javax.swing.JTextField();
        modelTitleLabel = new javax.swing.JLabel();
        modelParametersPanel = new javax.swing.JPanel();
        modelParametersScollable = new javax.swing.JScrollPane();
        parametersTable = new javax.swing.JTable();
        modelParametersToolbar = new javax.swing.JToolBar();
        newModelParameterButton = new javax.swing.JButton();
        removeModelParameterButton = new javax.swing.JButton();
        clearModelParametersButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(qedit.QEditApp.class).getContext().getResourceMap(ModelInfoDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N

        containerPanel.setName("containerPanel"); // NOI18N

        modelInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("modelInfoPanel.border.title"))); // NOI18N
        modelInfoPanel.setName("modelInfoPanel"); // NOI18N

        modelUriLabel.setIcon(resourceMap.getIcon("modelUriLabel.icon")); // NOI18N
        modelUriLabel.setLabelFor(modelUriField);
        modelUriLabel.setText(resourceMap.getString("modelUriLabel.text")); // NOI18N
        modelUriLabel.setName("modelUriLabel"); // NOI18N

        modelUriField.setEditable(false);
        modelUriField.setText(resourceMap.getString("modelUriField.text")); // NOI18N
        modelUriField.setFocusable(false);
        modelUriField.setName("modelUriField"); // NOI18N

        trainingDatasetField.setEditable(false);
        trainingDatasetField.setText(resourceMap.getString("trainingDatasetField.text")); // NOI18N
        trainingDatasetField.setFocusable(false);
        trainingDatasetField.setName("trainingDatasetField"); // NOI18N

        trainingDatasetLabel.setText(resourceMap.getString("trainingDatasetLabel.text")); // NOI18N
        trainingDatasetLabel.setName("trainingDatasetLabel"); // NOI18N

        predictionFeatureField.setEditable(false);
        predictionFeatureField.setText(resourceMap.getString("predictionFeatureField.text")); // NOI18N
        predictionFeatureField.setFocusable(false);
        predictionFeatureField.setName("predictionFeatureField"); // NOI18N

        predictionFeatureLabel.setText(resourceMap.getString("predictionFeatureLabel.text")); // NOI18N
        predictionFeatureLabel.setName("predictionFeatureLabel"); // NOI18N

        dependentFeatureField.setEditable(false);
        dependentFeatureField.setText(resourceMap.getString("dependentFeatureField.text")); // NOI18N
        dependentFeatureField.setFocusable(false);
        dependentFeatureField.setName("dependentFeatureField"); // NOI18N

        dependentFeatureLabel.setText(resourceMap.getString("dependentFeatureLabel.text")); // NOI18N
        dependentFeatureLabel.setName("dependentFeatureLabel"); // NOI18N

        trainingAlgorithmLabel.setText(resourceMap.getString("trainingAlgorithmLabel.text")); // NOI18N
        trainingAlgorithmLabel.setName("trainingAlgorithmLabel"); // NOI18N

        independentFeaturesLabel.setText(resourceMap.getString("independentFeaturesLabel.text")); // NOI18N
        independentFeaturesLabel.setName("independentFeaturesLabel"); // NOI18N

        trainingAlgorithmField.setEditable(false);
        trainingAlgorithmField.setText(resourceMap.getString("trainingAlgorithmField.text")); // NOI18N
        trainingAlgorithmField.setFocusable(false);
        trainingAlgorithmField.setName("trainingAlgorithmField"); // NOI18N

        independentFeaturesScrollable.setName("independentFeaturesScrollable"); // NOI18N

        independentFeaturesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        independentFeaturesList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        independentFeaturesList.setName("independentFeaturesList"); // NOI18N
        independentFeaturesScrollable.setViewportView(independentFeaturesList);

        independentFeaturesListToolbar.setFloatable(false);
        independentFeaturesListToolbar.setRollover(true);
        independentFeaturesListToolbar.setName("independentFeaturesListToolbar"); // NOI18N

        newIndependentFeatureButton.setIcon(resourceMap.getIcon("newIndependentFeatureButton.icon")); // NOI18N
        newIndependentFeatureButton.setText(resourceMap.getString("newIndependentFeatureButton.text")); // NOI18N
        newIndependentFeatureButton.setToolTipText(resourceMap.getString("newIndependentFeatureButton.toolTipText")); // NOI18N
        newIndependentFeatureButton.setFocusable(false);
        newIndependentFeatureButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newIndependentFeatureButton.setName("newIndependentFeatureButton"); // NOI18N
        newIndependentFeatureButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        independentFeaturesListToolbar.add(newIndependentFeatureButton);

        removeIndependentFeatureButton.setIcon(resourceMap.getIcon("removeIndependentFeatureButton.icon")); // NOI18N
        removeIndependentFeatureButton.setText(resourceMap.getString("removeIndependentFeatureButton.text")); // NOI18N
        removeIndependentFeatureButton.setToolTipText(resourceMap.getString("removeIndependentFeatureButton.toolTipText")); // NOI18N
        removeIndependentFeatureButton.setFocusable(false);
        removeIndependentFeatureButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeIndependentFeatureButton.setName("removeIndependentFeatureButton"); // NOI18N
        removeIndependentFeatureButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        independentFeaturesListToolbar.add(removeIndependentFeatureButton);

        clearAllIndependentFeaturesButton.setIcon(resourceMap.getIcon("clearAllIndependentFeaturesButton.icon")); // NOI18N
        clearAllIndependentFeaturesButton.setText(resourceMap.getString("clearAllIndependentFeaturesButton.text")); // NOI18N
        clearAllIndependentFeaturesButton.setToolTipText(resourceMap.getString("clearAllIndependentFeaturesButton.toolTipText")); // NOI18N
        clearAllIndependentFeaturesButton.setFocusable(false);
        clearAllIndependentFeaturesButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clearAllIndependentFeaturesButton.setName("clearAllIndependentFeaturesButton"); // NOI18N
        clearAllIndependentFeaturesButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        independentFeaturesListToolbar.add(clearAllIndependentFeaturesButton);

        modelTitleTextField.setText(resourceMap.getString("modelTitleTextField.text")); // NOI18N
        modelTitleTextField.setName("modelTitleTextField"); // NOI18N

        modelTitleLabel.setText(resourceMap.getString("modelTitleLabel.text")); // NOI18N
        modelTitleLabel.setName("modelTitleLabel"); // NOI18N

        org.jdesktop.layout.GroupLayout modelInfoPanelLayout = new org.jdesktop.layout.GroupLayout(modelInfoPanel);
        modelInfoPanel.setLayout(modelInfoPanelLayout);
        modelInfoPanelLayout.setHorizontalGroup(
            modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(modelInfoPanelLayout.createSequentialGroup()
                .add(24, 24, 24)
                .add(modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(modelInfoPanelLayout.createSequentialGroup()
                        .add(modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(independentFeaturesLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(predictionFeatureLabel)
                            .add(trainingDatasetLabel)
                            .add(modelUriLabel)
                            .add(dependentFeatureLabel)
                            .add(modelTitleLabel))
                        .add(18, 18, 18))
                    .add(modelInfoPanelLayout.createSequentialGroup()
                        .add(trainingAlgorithmLabel)
                        .add(18, 18, 18))
                    .add(modelInfoPanelLayout.createSequentialGroup()
                        .add(independentFeaturesListToolbar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(independentFeaturesScrollable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .add(modelUriField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .add(trainingDatasetField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .add(predictionFeatureField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .add(dependentFeatureField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, trainingAlgorithmField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .add(modelTitleTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE))
                .addContainerGap())
        );
        modelInfoPanelLayout.setVerticalGroup(
            modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(modelInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(modelTitleTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(modelTitleLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(modelUriField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(modelUriLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(trainingDatasetField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(trainingDatasetLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(predictionFeatureField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(predictionFeatureLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(dependentFeatureField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(dependentFeatureLabel))
                .add(18, 18, 18)
                .add(modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(modelInfoPanelLayout.createSequentialGroup()
                        .add(independentFeaturesLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(independentFeaturesListToolbar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(independentFeaturesScrollable, 0, 0, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(modelInfoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(trainingAlgorithmField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(trainingAlgorithmLabel))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        modelParametersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("modelParametersPanel.border.title"))); // NOI18N
        modelParametersPanel.setName("modelParametersPanel"); // NOI18N

        modelParametersScollable.setName("modelParametersScollable"); // NOI18N

        parametersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Value", "Scope", "Comment"
            }
        ));
        parametersTable.setCellSelectionEnabled(true);
        parametersTable.setName("parametersTable"); // NOI18N
        modelParametersScollable.setViewportView(parametersTable);
        parametersTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("parametersTable.columnModel.title0")); // NOI18N
        parametersTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("parametersTable.columnModel.title1")); // NOI18N
        parametersTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("parametersTable.columnModel.title2")); // NOI18N
        parametersTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("parametersTable.columnModel.title3")); // NOI18N

        modelParametersToolbar.setFloatable(false);
        modelParametersToolbar.setRollover(true);
        modelParametersToolbar.setName("modelParametersToolbar"); // NOI18N

        newModelParameterButton.setIcon(resourceMap.getIcon("newModelParameterButton.icon")); // NOI18N
        newModelParameterButton.setText(resourceMap.getString("newModelParameterButton.text")); // NOI18N
        newModelParameterButton.setToolTipText(resourceMap.getString("newModelParameterButton.toolTipText")); // NOI18N
        newModelParameterButton.setFocusable(false);
        newModelParameterButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newModelParameterButton.setName("newModelParameterButton"); // NOI18N
        newModelParameterButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        modelParametersToolbar.add(newModelParameterButton);

        removeModelParameterButton.setIcon(resourceMap.getIcon("removeModelParameterButton.icon")); // NOI18N
        removeModelParameterButton.setText(resourceMap.getString("removeModelParameterButton.text")); // NOI18N
        removeModelParameterButton.setToolTipText(resourceMap.getString("removeModelParameterButton.toolTipText")); // NOI18N
        removeModelParameterButton.setFocusable(false);
        removeModelParameterButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeModelParameterButton.setName("removeModelParameterButton"); // NOI18N
        removeModelParameterButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        modelParametersToolbar.add(removeModelParameterButton);

        clearModelParametersButton.setIcon(resourceMap.getIcon("clearModelParametersButton.icon")); // NOI18N
        clearModelParametersButton.setText(resourceMap.getString("clearModelParametersButton.text")); // NOI18N
        clearModelParametersButton.setToolTipText(resourceMap.getString("clearModelParametersButton.toolTipText")); // NOI18N
        clearModelParametersButton.setFocusable(false);
        clearModelParametersButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clearModelParametersButton.setName("clearModelParametersButton"); // NOI18N
        clearModelParametersButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        modelParametersToolbar.add(clearModelParametersButton);

        org.jdesktop.layout.GroupLayout modelParametersPanelLayout = new org.jdesktop.layout.GroupLayout(modelParametersPanel);
        modelParametersPanel.setLayout(modelParametersPanelLayout);
        modelParametersPanelLayout.setHorizontalGroup(
            modelParametersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, modelParametersScollable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
            .add(modelParametersToolbar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
        );
        modelParametersPanelLayout.setVerticalGroup(
            modelParametersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, modelParametersPanelLayout.createSequentialGroup()
                .add(modelParametersToolbar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(modelParametersScollable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        closeButton.setIcon(resourceMap.getIcon("closeButton.icon")); // NOI18N
        closeButton.setText(resourceMap.getString("closeButton.text")); // NOI18N
        closeButton.setToolTipText(resourceMap.getString("closeButton.toolTipText")); // NOI18N
        closeButton.setName("closeButton"); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout containerPanelLayout = new org.jdesktop.layout.GroupLayout(containerPanel);
        containerPanel.setLayout(containerPanelLayout);
        containerPanelLayout.setHorizontalGroup(
            containerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, containerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(containerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, modelInfoPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, modelParametersPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(closeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        containerPanelLayout.setVerticalGroup(
            containerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(containerPanelLayout.createSequentialGroup()
                .add(modelInfoPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(modelParametersPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(closeButton)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(containerPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(1, 1, 1)
                .add(containerPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ModelInfoDialog dialog = new ModelInfoDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearAllIndependentFeaturesButton;
    private javax.swing.JButton clearModelParametersButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JTextField dependentFeatureField;
    private javax.swing.JLabel dependentFeatureLabel;
    private javax.swing.JLabel independentFeaturesLabel;
    private javax.swing.JList independentFeaturesList;
    private javax.swing.JToolBar independentFeaturesListToolbar;
    private javax.swing.JScrollPane independentFeaturesScrollable;
    private javax.swing.JPanel modelInfoPanel;
    private javax.swing.JPanel modelParametersPanel;
    private javax.swing.JScrollPane modelParametersScollable;
    private javax.swing.JToolBar modelParametersToolbar;
    private javax.swing.JLabel modelTitleLabel;
    private javax.swing.JTextField modelTitleTextField;
    private javax.swing.JTextField modelUriField;
    private javax.swing.JLabel modelUriLabel;
    private javax.swing.JButton newIndependentFeatureButton;
    private javax.swing.JButton newModelParameterButton;
    private javax.swing.JTable parametersTable;
    private javax.swing.JTextField predictionFeatureField;
    private javax.swing.JLabel predictionFeatureLabel;
    private javax.swing.JButton removeIndependentFeatureButton;
    private javax.swing.JButton removeModelParameterButton;
    private javax.swing.JTextField trainingAlgorithmField;
    private javax.swing.JLabel trainingAlgorithmLabel;
    private javax.swing.JTextField trainingDatasetField;
    private javax.swing.JLabel trainingDatasetLabel;
    // End of variables declaration//GEN-END:variables

    public JTextField getDependentFeatureField() {
        return dependentFeatureField;
    }

    public JList getIndependentFeaturesList() {
        return independentFeaturesList;
    }

    public JTextField getModelUriField() {
        return modelUriField;
    }

    public JTable getParametersTable() {
        return parametersTable;
    }

    public JTextField getPredictionFeatureField() {
        return predictionFeatureField;
    }

    public JTextField getTrainingAlgorithmField() {
        return trainingAlgorithmField;
    }

    public JTextField getTrainingDatasetField() {
        return trainingDatasetField;
    }
}
